package com.codename1.demos.shoppinglist;


import com.codename1.components.FloatingActionButton;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Button;
import com.codename1.ui.CheckBox;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.FontImage;
import com.codename1.ui.Toolbar;
import com.codename1.ui.animations.ComponentAnimation;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.LayeredLayout;
import java.io.IOException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class ShoppingList {

    private Form current;
    private Resources theme;

    private static final String[] SHOPPING_LIST = {
        "Apples", "Bananas", "Juice", "Bread", "Cheese", "Milk", "Yogurt", "Apples", "Bananas", "Juice", 
        "Bread", "Cheese", "Milk"
    };
    
    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        
        Toolbar.setGlobalToolbar(false);
        Form shoppingList = new Form("Shop", BoxLayout.y());
        Toolbar tb = new Toolbar(true);
        shoppingList.setToolbar(tb);
        tb.setUIID("ShopToolbar");
        
        FloatingActionButton fab = FloatingActionButton.createFAB(FontImage.MATERIAL_ADD);
        if(!fab.getUIManager().isThemeConstant("paintsTitleBarBool", false)) {
            fab.getAllStyles().setMarginTop(18);
        }
        fab.bindFabToContainer(shoppingList.getContentPane(), Component.RIGHT, Component.TOP);
        
        Button back = new Button("", "Command");
        FontImage.setMaterialIcon(back, FontImage.MATERIAL_ARROW_BACK);
        Button search = new Button("", "Command");
        FontImage.setMaterialIcon(search, FontImage.MATERIAL_SEARCH);
        Button reply = new Button("", "Command");
        FontImage.setMaterialIcon(reply, FontImage.MATERIAL_REPLY);
        
        Label titleLabel = new Label("Shop", "Title");
        
        Container titleAndBack = LayeredLayout.encloseIn(titleLabel,
                FlowLayout.encloseIn(back));
        Container titleComponent = BorderLayout.west(titleAndBack).
                add(BorderLayout.EAST, 
                        FlowLayout.encloseRight(reply, search)
                        );
        tb.setTitleComponent(titleComponent);
        
        ComponentAnimation c1 = tb.createStyleAnimation("ShopToolbarShrunk", 200);
        ComponentAnimation c2 = titleLabel.createStyleAnimation("TitleShrunk", 200);
        ComponentAnimation c3 = fab.createStyleAnimation("FloatingActionButtonShrunk", 200);
        shoppingList.getAnimationManager().onTitleScrollAnimation(c1, c2, c3);
        
        Label filler = new Label(" ");
        filler.setPreferredSize(tb.getPreferredSize());
        shoppingList.add(filler);
        
        for(String t : SHOPPING_LIST) {
            shoppingList.add(createCheck(t, false)).
                    add(createSeparator());
        }
        
        shoppingList.show();
    }
    
    private Component createCheck(String t, boolean selected) {
        CheckBox c = new CheckBox(t);
        c.setSelected(selected);
        c.setGap(Display.getInstance().convertToPixels(3));
        c.setToggle(true);
        c.setTextPosition(Component.RIGHT);
        c.setIcon(FontImage.createMaterial(FontImage.MATERIAL_CHECK, "UncheckedIcon", 4));
        c.setPressedIcon(FontImage.createMaterial(FontImage.MATERIAL_CHECK, "CheckedIcon", 4));
        return c;
    }
    
    private Component createSeparator() {
        Label l = new Label("", "Separator");
        l.setShowEvenIfBlank(true);
        return l;
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
